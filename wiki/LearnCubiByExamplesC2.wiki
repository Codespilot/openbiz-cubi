#summary Learn Cubi By Examples Chapter 2 - Implementation Phase 1

= Learn Cubi By Examples Chapter 2 - Implementation Phase 1 =

At the end of previous chapter, we have database schema ready. This chapter will start the initial implementation. We call it phase 1, the prototyping phase.

== Write Trac Module ==
In Cubi, an application can be one or more Cubi modules. To make it simple to manage, we put all Trac application into 'trac' module.

=== Module Directories ===
With a module, you can choose a directories the way you want. Typically, each business component may have its own sub-directory. In trac module, we have the following sub-directories for business components as
{{{
modules
- trac
-- attach (ticket attachment)
-- comments (ticket comments)
-- component
-- enum (enumerations)
-- milestone
-- product
-- ticket
-- version
}}}

Other sub-directories are typical Cubi module folders:
{{{
modules
- trac
-- message (contains module message files)
-- resource (contains module resource files)
-- view (contains module View files, view is same as page)
-- websvc (contains module public web service files)
-- do (contains module Data Object files)
-- form (contains module Form files)
}}}

=== Generate Metadata ===
A Cubi module can be created manually or with a command line tool called “gen_meta”. In this chapter, we will use gen_meta tool which is a command line metadata and module generator. This tool guide user to create a new module in steps. It accomplishes the all manual editing in one shot.

First, launch a console - a DOS window or a Linux/Unix console. Let's assume Cubi is installed under /cubi/ folder. Change director to /cubi/bin/tools/. Then type in the following command. 
{{{
# php gen_meta.php Default trac_ticket trac
}}}
Where “Default” is the first database name defined in /cubi/application.xml, “trac_ticket” is the table name, “trac” is the module name. 

Following the steps prompted by “gen_meta”, always press “enter” to make choice suggested by the tool.

{{{
# php gen_meta.php Default trac_ticket trac.ticket
---------------------------------------
Please select metadata naming:
1. module path: \trac\ticket, object name: TracTicket, module name: trac.ticket
2. module path: \trac\ticket, object name: Ticket, module name: trac.ticket
S. specify a custom module path, object name and module name
Please select: [1/2/s] (1) : 2

Access control options:
1. Access and Manage (default)
2. Access, Create, Update and Delete
3. No access control
Please select access control type [1/2/3] (1) :

---------------------------------------
Target dir: C:\xampp\htdocs\test\cubi4\modules\trac\ticket
Medata file to create:
  do/TicketDO.xml
  form/Ticket...Form.xml
  view/TicketView.xml
Do you want to continue? [y/n] (y) :
---------------------------------------
Do you want to generate data Object? [y/n] (y) :
Generate Data Object metadata file ...
Start generate dataobject TicketDO.
Create directory C:\xampp\htdocs\test\cubi4\modules/trac/ticket/do
        /trac/ticket/do/TicketDO.xml is generated.
---------------------------------------
Do you want to generate form Object? [y/n] (y) :
Generate Form Object metadata files ...
Start generate form object TicketListForm.
Create directory C:\xampp\htdocs\test\cubi4\modules/trac/ticket/form
        /trac/ticket/form/TicketListForm.xml is generated.

Start generate form object TicketNewForm.
        /trac/ticket/form/TicketNewForm.xml is generated.

Start generate form object TicketEditForm.
        /trac/ticket/form/TicketEditForm.xml is generated.

Start generate form object TicketDetailForm.
        /trac/ticket/form/TicketDetailForm.xml is generated.

Start generate form object TicketCopyForm.
        /trac/ticket/form/TicketCopyForm.xml is generated.

---------------------------------------
Do you want to generate view Object? [y/n] (y) :
Generate view Object metadata files ...
Start generate form object TicketListView.
Create directory C:\xampp\htdocs\test\cubi4\modules/trac/view
        /trac/view/TicketListView.xml is generated.
---------------------------------------
Do you want to generate module dashboard files? [y/n] (y) :
Generate Module Dashboard ...
Start generate DashboardForm.xml .
Create directory C:\xampp\htdocs\test\cubi4\modules/trac/widget
        /trac/widget/DashboardForm.xml is generated.

Start generate DashboardView.xml .
        /trac/view/DashboardView.xml is generated.

Start generate LeftMenu.xml .
        /trac/widget/LeftMenu.xml is generated.

Start modify view.tpl to enable module left menu supports .
        /trac/template/view.tpl is modified.

---------------------------------------
Do you want to create mod.xml? [y/n] (y) :
Generate mod.xml ...
Start generate mod.xml.
        /trac/mod.xml is generated.
}}}

After the command is executed, the following files are generated. 
{{{
Module configuration file
/cubi/modules/trac/mod.xml

Module DO file
/cubi/modules/trac/ticket/do/TicketDO.xml

Module Form file
/cubi/modules/trac/ticket/form/TicketListForm.xml
/cubi/modules/trac/ticket/form/TicketDetailForm.xml
/cubi/modules/trac/ticket/form/TicketEditForm.xml
/cubi/modules/trac/ticket/form/TicketNewForm.xml
/cubi/modules/trac/ticket/form/TicketCopyForm.xml

Module View file
/cubi/modules/trac/view/TicketListView.xml
/cubi/modules/trac/view/DashboardView.xml

Module template file
/cubi/modules/trac/template/*

Module widget file
/cubi/modules/trac/widget/*
}}}

=== Understand module description file ===
Every Cubi module has its own description file mod.xml. Let's see what is in mod.xml.

{{{
<?xml version="1.0" standalone="no"?>
<Module Name="trac" Description="trac module" Version="0.1" OpenbizVersion="2.4">
    <ACL>
        <Resource Name="trac">
	    <Action Name="Access" Description="Access Trac Module Dashboard"/>
        </Resource>
        <Resource Name="trac.ticket">
            <Action Name="Access" Description="Access Trac Ticket"/>
            <Action Name="Manage" Description="Manage Trac Ticket"/>
        </Resource>
    </ACL>
    <Menu>
        <MenuItem Name="Trac" Title="Trac" Description="Trac Description" URL="/trac/dashboard" Parent="" Order="10">
	     <MenuItem Name="Trac.Ticket" Title="Ticket" Description="Trac Ticket description" URL="" Parent="" Order="10">
                 <MenuItem Name="Trac.Ticket.List" Title="Ticket Manage" Description=""  URL="/trac/ticket_list" Order="10"/>
             </MenuItem>	
        </MenuItem>	
    </Menu>
    <Dependency>
        <Module Name="system"/>
    </Dependency>
</Module>
}}}