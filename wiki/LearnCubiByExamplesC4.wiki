#summary Learn Cubi By Examples Chapter 4 - Enrich Ticket Forms

= Learn Cubi By Examples Chapter 4 - Enrich Ticket Forms =
At the end of previous chapter, we have supporting component created for ticket. This chapter will come back to apply these components to ticket data object and forms.

== Change List Form ==
There are obvious UI issues on the ticket list form as well as the ticket input form which was created by gen_meta tool in Chapter 2. Let's fix them now.

=== Change List Form ===
By default the list keeps all columns from the ticket table. These columns overflow the width of the table. After removing some elements from the trac/ticket/form/TicketListForm.xml and switching rows, we get a {{{DataPanel}}} section.
{{{
    <DataPanel>
        <Element Name="row_selections" Class="RowCheckbox"  Label="" FieldName="Id"/>
        <Element Name="fld_Id" Class="ColumnText" FieldName="Id" Label="Id" Sortable="Y" AllowURLParam="N" Link="javascript:">         
         	<EventHandler Name="fld_Id_onclick" Event="onclick" Function="SwitchForm(trac.ticket.form.TicketDetailForm,{@:Elem[fld_Id].Value})"   />
        </Element>
        <Element Name="fld_summary" Class="ColumnText" FieldName="summary" Label="Summary"  Sortable="Y"/>
        <Element Name="fld_type" Class="ColumnText" FieldName="type" Label="Type"  Sortable="Y" />
        <Element Name="fld_product_id" Class="ColumnText" FieldName="product_id" Label="Product Id"  Sortable="Y"/>
        <Element Name="fld_component_id" Class="ColumnText" FieldName="component_id" Label="Component Id"  Sortable="Y"/>
        <Element Name="fld_priority" Class="ColumnText" FieldName="priority" Label="Priority"  Sortable="Y"/>
        <Element Name="fld_owner_id" Class="ColumnText" FieldName="owner_id" Label="Owner Id"  Sortable="Y"/>
        <Element Name="fld_status" Class="ColumnText" FieldName="status" Label="Status"  Sortable="Y"/>
    </DataPanel>
}}}

The ticket list page then looks like
http://openbiz-cubi.googlecode.com/svn/trunk/docs/img/learnbyexamples/trac_ticketlist1.jpg

== Add Table Join ==
The ticket list form looks nice, but still need some work. We want to show  product name and component name instead of product id and component id. The product name is not in ticket table, it is in product table. So we will next use 'join' to link the product name to ticket.

First, let's add joins in ticket data object. Edit the trac/ticket/do/TicketDO.xml as below.
{{{
<?xml version="1.0" standalone="no"?>
<BizDataObj Name="TicketDO" Description="" Class="BizDataObj" DBName="Default" Table="trac_ticket" SearchRule="" SortRule="" OtherSQLRule="" Uniqueness="" Stateless="N" IdGeneration="Identity" CacheLifeTime="0" CreateCondition="trac.ticket.Manage" UpdateCondition="trac.ticket.Manage" DeleteCondition="trac.ticket.Manage">
    <BizFieldList>
        <BizField Name="Id" Column="id"     Type="Number"/>
        <BizField Name="type" Column="type" Length="30"   Required="N" Type="Text"/>
        <BizField Name="time" Column="time"    Required="N" Type="Datetime"/>
        <BizField Name="changetime" Column="changetime"    Required="N" Type="Datetime"/>
        <BizField Name="product_id" Column="product_id"    Required="N" Type="Number"/>
        <BizField Name="product" Join="product" Column="name"/>
        <BizField Name="component_id" Column="component_id"    Required="N" Type="Number"/>
        <BizField Name="component" Join="component" Column="name"/>
        <BizField Name="severity" Column="severity" Length="30"   Required="N" Type="Text"/>
        <BizField Name="priority" Column="priority" Length="30"   Required="N" Type="Text"/>
        <BizField Name="owner_id" Column="owner_id"    Required="N" Type="Number"/>
        <BizField Name="owner" Join="owner" Column="username"/>
        <BizField Name="reporter_id" Column="reporter_id"    Required="N" Type="Number"/>
        <BizField Name="reporter" Join="reporter" Column="username"/>
        <BizField Name="cc" Column="cc" Length="255"   Required="N" Type="Text"/>
        <BizField Name="version_id" Column="version_id"    Required="N" Type="Number"/>
        <BizField Name="version" Join="version" Column="name"/>
        <BizField Name="milestone_id" Column="milestone_id"    Required="N" Type="Number"/>
        <BizField Name="milestone" Join="milestone" Column="name"/>
        <BizField Name="status" Column="status" Length="30"   Required="N" Type="Text"/>
        <BizField Name="resolution" Column="resolution" Length="30"   Required="N" Type="Text"/>
        <BizField Name="summary" Column="summary" Length="255"   Required="N" Type="Text"/>
        <BizField Name="description" Column="description"    Required="N" Type="Text"/>
        <BizField Name="keywords" Column="keywords" Length="128"   Required="N" Type="Text"/>
    </BizFieldList>
    <TableJoins>
        <Join Name="product" Table="trac_product" Column="id" ColumnRef="product_id" JoinType="LEFT JOIN"/>
        <Join Name="component" Table="trac_component" Column="id" ColumnRef="component_id" JoinType="LEFT JOIN"/>
        <Join Name="owner" Table="user" Column="id" ColumnRef="owner_id" JoinType="LEFT JOIN"/>
        <Join Name="reporter" Table="user" Column="id" ColumnRef="reporter_id" JoinType="LEFT JOIN"/>
        <Join Name="version" Table="trac_version" Column="id" ColumnRef="version_id" JoinType="LEFT JOIN"/>
        <Join Name="milestone" Table="trac_milestone" Column="id" ColumnRef="milestone_id" JoinType="LEFT JOIN"/>
    </TableJoins>
    <ObjReferences>
    </ObjReferences>
</BizDataObj>
}}}
You can find more details of Join in [OpenbizFrameworkDataObject Openbiz Data Object], search for "Object Relational Mapping".

Seconds, we map the joined fields in data object to forms.

Seconds, we map the joined fields in data object to forms.
<< to be finished >>

== Add Object Reference ==
<< to be finished >>