#summary Rewrite cubi ui with Angularjs

= Rewrite Cubi UI with Angularjs =

This document gives steps to rewrite cubi UI with Angularjs

= Why Angularjs =

== Web Architecture Changes ==
Openbiz Cubi is a mature web application platform built on top of previous generation web architecture and tools
 * Traditional MVC framework. Web server implements Model, Viewer and Controller. Viewer layer is rendered from server side template.
 * Limited web service supported. No build-in Restful API support
 * Even though jQuery is used on browser side, many UI logic is executed at web server side.

The new web architecture is featured with
 * Web server provide web services (e.g. Restful). Thus it can support multiple client including browser, mobile apps.
 * Browser owns MVC stack, web server only provider layout. Data is fetched from server side and dynamically rendered on the page.
 * Browser side tools are heavily used to make more clean and efficient client code.

== Angularjs vs others ==

Angularjs https://angularjs.org/ gets more popular comparing with other javascript frameworks. See trend at http://www.google.com/trends/explore?hl=en-US#q=Angularjs,+Backbone.js,+Ember.js&date=today+12-m&cmpt=q

= Apply Angularjs on Cubi List Form =

== Prepare the changes ==

Things to be prepared before make code change
 * Add Restful web service on Cubi app. https://code.google.com/p/openbiz-cubi/wiki/CubiRestService
 * Download angularjs and put it under cubi/js/

== The code changes ==

The changes will happen on 

Form Metadata
 * Form metadata xml file adds DataService and QueryString attributes to replace DataObject and SearchRule attributes

Form class
 * Form class keeps only render logic and delete the code that access data objects
 * Form class adds code to read DataService and QueryString, then output them to template.

Template
 * View template file adds "ng-app" in body tag
 * Form template file adds angular Controller in form tag, use ng-... to replace existing logic.

Javascript
 * javascript file adds TableFormController that provides functions for search, paging, sort. Each controller use angular http component to fetch data from web service.

{{{
function TableFormController($scope, $http) {
	$scope.currentPage = 1;
	$scope.totalPage = 1;
	$scope.sort = "";
	$scope.sorder = "";

	$scope.init = function(name, dataService) {
		$scope.name = name;
		$scope.dataService = dataService;
		
		$scope.gotoPage(1);
	}

	$scope.gotoPage = function(page) {
		if (page < 1) return;
		if (page > $scope.totalPage) return;
		$scope.fetchData(page, $scope.sort, $scope.sorder, null);
	}
	
	$scope.sortRecord = function(field) {
		// if sort on the field, toggle the sort order
		if (field == $scope.sort) {
			if ($scope.sorder == "") fieldOrder = "asc";
			else if ($scope.sorder == "asc") fieldOrder = "desc";
			else fieldOrder = "asc";
		}
		else {
			fieldOrder = "asc";
		}
		$scope.fetchData(1, field, fieldOrder, null);
	}
	
	$scope.search = function() {
		// run search with user input on searchPanel
		if (typeof $scope.searchPanel != 'undefined' && $scope.searchPanel != null) {
			var elemValues = [];
			for (var key in $scope.searchPanel) {
				elemValues.push(key+"="+$scope.searchPanel[key]);
			}
			var queryString = elemValues.join("&");
			$scope.fetchData(1, $scope.sort, $scope.sorder, queryString);
		}
	}
	
	$scope.fetchData = function (page, sortField, sortOrder, queryString) {
		var url = $scope.dataService+'/q?format=json';
		if (page != null) url += '&page='+page;
		if (sortField && sortOrder) url += '&sort='+sortField+'&sorder='+sortOrder;
		if (queryString) url += '&'+queryString;
		$http.get(url).success(function(responseObj) {
			$scope.itemRows = responseObj.data;
			$scope.totalPage = responseObj.totalPage;
			$scope.currentPage = page;
			$scope.sort = sortField;
			$scope.sorder = sortOrder;
		});
	}
}
}}}

= Get the source =

Get the latest angular cubi code from https://openbiz-cubi.googlecode.com/svn/branches/angular.

Key changes for list form.
 * /cubi/modules/system/form/UserListForm.xml
 * /cubi/themes/default/template/system_right_listform.tpl.html

Key changes for left menu and main tab.
 * /cubi/modules/menu/widget/MenuWidget.php
 * /cubi/modules/menu/widget/ApplicationMenu.xml
 * /cubi/modules/menu/template/vertical_menu.tpl